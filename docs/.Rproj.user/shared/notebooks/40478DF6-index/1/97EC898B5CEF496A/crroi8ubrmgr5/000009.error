{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function (x, ...) \nUseMethod(\"print\")(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"print.tmap(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"print_tmap(x = x, vp = vp, return.asp = return.asp, mode = mode, \n    show = show, knit = knit, options = options, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"process_tm(x, gt, gm, interactive)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mapply(FUN = process_layers, gs, cnlx, MoreArgs = list(gt = gt, \n    gf = gf, interactive = interactive), SIMPLIFY = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (g, z, gt, gf, interactive) \n{\n    if (dupl <- anyDuplicated(names(g))) {\n        warning(\"One tm layer group has duplicated layer types, which are omitted. To draw multiple layers of the same type, use multiple layer groups (i.e. specify tm_shape prior to each of them).\",  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"process_symbols(data, g$tm_symbols, gt, gf, z = z + which(plot.order == \n    \"tm_symbols\"), interactive = interactive)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"process_aes(type = \"symbol\", xs, c(\"xcol\", \"xsize\", \"xshape\"), \n    ifelse(g$are.dots, \"dots\", \"symbols\"), data, g, gt, gby, \n    z, interactive)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"check_symbol_specials(xs[[\"symbol.col\"]], xs[[\"symbol.size\"]], \n    xs[[\"symbol.shape\"]], g, gt, gby, xvary, data, nx, interactive)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(\"Invalid symbol colors\", call. = FALSE)","line_number":0}],"message":"Error: Invalid symbol colors\n"}